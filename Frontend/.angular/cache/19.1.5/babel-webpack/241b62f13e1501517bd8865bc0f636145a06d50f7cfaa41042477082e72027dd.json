{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nlet TelegramService = class TelegramService {\n  http;\n  apiUrl = 'http://localhost:5000/api/telegram'; // Змініть на ваш реальний URL\n  constructor(http) {\n    this.http = http;\n  }\n  sendMessage(chatId, message) {\n    return this.http.post(`${this.apiUrl}/sendMessage`, {\n      chatId,\n      message\n    });\n  }\n  static ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nTelegramService = __decorate([Injectable({\n  providedIn: 'root'\n})], TelegramService);\nexport { TelegramService };","map":{"version":3,"names":["Injectable","HttpClient","TelegramService","http","apiUrl","constructor","sendMessage","chatId","message","post","__decorate","providedIn"],"sources":["C:\\Users\\user\\Desktop\\Front\\buy-time\\Frontend\\src\\app\\services\\telegram.service.ts"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\ninterface TgButton{\r\n  show(): void;\r\n  hide(): void;\r\n  setText(text: string): void;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TelegramService {\r\n  private apiUrl = 'http://localhost:5000/api/telegram'; // Змініть на ваш реальний URL\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  sendMessage(chatId: string, message: string): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/sendMessage`, { chatId, message });\r\n  }\r\n}\r\n\r\n"],"mappings":";AACA,SAAiBA,UAAU,QAAQ,eAAe;AAClD,SAASC,UAAU,QAAQ,sBAAsB;AAW1C,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAGNC,IAAA;EAFZC,MAAM,GAAG,oCAAoC,CAAC,CAAC;EAEvDC,YAAoBF,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCG,WAAWA,CAACC,MAAc,EAAEC,OAAe;IACzC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,GAAG,IAAI,CAACL,MAAM,cAAc,EAAE;MAAEG,MAAM;MAAEC;IAAO,CAAE,CAAC;EAC/E;;;;;AAPWN,eAAe,GAAAQ,UAAA,EAH3BV,UAAU,CAAC;EACVW,UAAU,EAAE;CACb,CAAC,C,EACWT,eAAe,CAQ3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}