{"ast":null,"code":"import nacl from 'tweetnacl-util';\nimport nacl$1 from 'tweetnacl';\nvar CONNECT_EVENT_ERROR_CODES;\n(function (CONNECT_EVENT_ERROR_CODES) {\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_NOT_FOUND_ERROR\"] = 2] = \"MANIFEST_NOT_FOUND_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_CONTENT_ERROR\"] = 3] = \"MANIFEST_CONTENT_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_EVENT_ERROR_CODES || (CONNECT_EVENT_ERROR_CODES = {}));\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n  CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (CONNECT_ITEM_ERROR_CODES = {}));\nvar SEND_TRANSACTION_ERROR_CODES;\n(function (SEND_TRANSACTION_ERROR_CODES) {\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SEND_TRANSACTION_ERROR_CODES || (SEND_TRANSACTION_ERROR_CODES = {}));\nvar SIGN_DATA_ERROR_CODES;\n(function (SIGN_DATA_ERROR_CODES) {\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SIGN_DATA_ERROR_CODES || (SIGN_DATA_ERROR_CODES = {}));\nvar DISCONNECT_ERROR_CODES;\n(function (DISCONNECT_ERROR_CODES) {\n  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(DISCONNECT_ERROR_CODES || (DISCONNECT_ERROR_CODES = {}));\nvar CHAIN;\n(function (CHAIN) {\n  CHAIN[\"MAINNET\"] = \"-239\";\n  CHAIN[\"TESTNET\"] = \"-3\";\n})(CHAIN || (CHAIN = {}));\nfunction encodeUint8Array(value, urlSafe) {\n  const encoded = nacl.encodeBase64(value);\n  if (!urlSafe) {\n    return encoded;\n  }\n  return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n  if (urlSafe) {\n    value = decodeURIComponent(value);\n  }\n  return nacl.decodeBase64(value);\n}\nfunction encode(value, urlSafe = false) {\n  let uint8Array;\n  if (value instanceof Uint8Array) {\n    uint8Array = value;\n  } else {\n    if (typeof value !== 'string') {\n      value = JSON.stringify(value);\n    }\n    uint8Array = nacl.decodeUTF8(value);\n  }\n  return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction decode(value, urlSafe = false) {\n  const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n  return {\n    toString() {\n      return nacl.encodeUTF8(decodedUint8Array);\n    },\n    toObject() {\n      try {\n        return JSON.parse(nacl.encodeUTF8(decodedUint8Array));\n      } catch (e) {\n        return null;\n      }\n    },\n    toUint8Array() {\n      return decodedUint8Array;\n    }\n  };\n}\nconst Base64 = {\n  encode,\n  decode\n};\nfunction concatUint8Arrays(buffer1, buffer2) {\n  const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n  mergedArray.set(buffer1);\n  mergedArray.set(buffer2, buffer1.length);\n  return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n  if (index >= array.length) {\n    throw new Error('Index is out of buffer');\n  }\n  const subArray1 = array.slice(0, index);\n  const subArray2 = array.slice(index);\n  return [subArray1, subArray2];\n}\nfunction toHexString(byteArray) {\n  let hexString = '';\n  byteArray.forEach(byte => {\n    hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n  });\n  return hexString;\n}\nfunction hexToByteArray(hexString) {\n  if (hexString.length % 2 !== 0) {\n    throw new Error(`Cannot convert ${hexString} to bytesArray`);\n  }\n  const result = new Uint8Array(hexString.length / 2);\n  for (let i = 0; i < hexString.length; i += 2) {\n    result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n  }\n  return result;\n}\nfunction isNode() {\n  return typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n}\nclass SessionCrypto {\n  constructor(keyPair) {\n    this.nonceLength = 24;\n    this.keyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    this.sessionId = toHexString(this.keyPair.publicKey);\n  }\n  createKeypair() {\n    return nacl$1.box.keyPair();\n  }\n  createKeypairFromString(keyPair) {\n    return {\n      publicKey: hexToByteArray(keyPair.publicKey),\n      secretKey: hexToByteArray(keyPair.secretKey)\n    };\n  }\n  createNonce() {\n    return nacl$1.randomBytes(this.nonceLength);\n  }\n  encrypt(message, receiverPublicKey) {\n    const encodedMessage = new TextEncoder().encode(message);\n    const nonce = this.createNonce();\n    const encrypted = nacl$1.box(encodedMessage, nonce, receiverPublicKey, this.keyPair.secretKey);\n    return concatUint8Arrays(nonce, encrypted);\n  }\n  decrypt(message, senderPublicKey) {\n    const [nonce, internalMessage] = splitToUint8Arrays(message, this.nonceLength);\n    const decrypted = nacl$1.box.open(internalMessage, nonce, senderPublicKey, this.keyPair.secretKey);\n    if (!decrypted) {\n      throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${this.keyPair.publicKey.toString()} \\n keypair secretkey: ${this.keyPair.secretKey.toString()}`);\n    }\n    return new TextDecoder().decode(decrypted);\n  }\n  stringifyKeypair() {\n    return {\n      publicKey: toHexString(this.keyPair.publicKey),\n      secretKey: toHexString(this.keyPair.secretKey)\n    };\n  }\n}\nexport { Base64, CHAIN, CONNECT_EVENT_ERROR_CODES, CONNECT_ITEM_ERROR_CODES, DISCONNECT_ERROR_CODES, SEND_TRANSACTION_ERROR_CODES, SIGN_DATA_ERROR_CODES, SessionCrypto, concatUint8Arrays, hexToByteArray, isNode, splitToUint8Arrays, toHexString };","map":{"version":3,"names":["nacl","nacl$1","CONNECT_EVENT_ERROR_CODES","CONNECT_ITEM_ERROR_CODES","SEND_TRANSACTION_ERROR_CODES","SIGN_DATA_ERROR_CODES","DISCONNECT_ERROR_CODES","CHAIN","encodeUint8Array","value","urlSafe","encoded","encodeBase64","encodeURIComponent","decodeToUint8Array","decodeURIComponent","decodeBase64","encode","uint8Array","Uint8Array","JSON","stringify","decodeUTF8","decode","decodedUint8Array","toString","encodeUTF8","toObject","parse","e","toUint8Array","Base64","concatUint8Arrays","buffer1","buffer2","mergedArray","length","set","splitToUint8Arrays","array","index","Error","subArray1","slice","subArray2","toHexString","byteArray","hexString","forEach","byte","hexToByteArray","result","i","parseInt","isNode","process","versions","node","SessionCrypto","constructor","keyPair","nonceLength","createKeypairFromString","createKeypair","sessionId","publicKey","box","secretKey","createNonce","randomBytes","encrypt","message","receiverPublicKey","encodedMessage","TextEncoder","nonce","encrypted","decrypt","senderPublicKey","internalMessage","decrypted","open","TextDecoder","stringifyKeypair"],"sources":["C:/Users/user/Desktop/Front/buy-time/Frontend/node_modules/@tonconnect/protocol/lib/esm/index.mjs"],"sourcesContent":["import nacl from 'tweetnacl-util';\nimport nacl$1 from 'tweetnacl';\n\nvar CONNECT_EVENT_ERROR_CODES;\n(function (CONNECT_EVENT_ERROR_CODES) {\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_NOT_FOUND_ERROR\"] = 2] = \"MANIFEST_NOT_FOUND_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_CONTENT_ERROR\"] = 3] = \"MANIFEST_CONTENT_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_EVENT_ERROR_CODES || (CONNECT_EVENT_ERROR_CODES = {}));\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (CONNECT_ITEM_ERROR_CODES = {}));\n\nvar SEND_TRANSACTION_ERROR_CODES;\n(function (SEND_TRANSACTION_ERROR_CODES) {\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SEND_TRANSACTION_ERROR_CODES || (SEND_TRANSACTION_ERROR_CODES = {}));\n\nvar SIGN_DATA_ERROR_CODES;\n(function (SIGN_DATA_ERROR_CODES) {\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SIGN_DATA_ERROR_CODES || (SIGN_DATA_ERROR_CODES = {}));\n\nvar DISCONNECT_ERROR_CODES;\n(function (DISCONNECT_ERROR_CODES) {\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(DISCONNECT_ERROR_CODES || (DISCONNECT_ERROR_CODES = {}));\n\nvar CHAIN;\n(function (CHAIN) {\n    CHAIN[\"MAINNET\"] = \"-239\";\n    CHAIN[\"TESTNET\"] = \"-3\";\n})(CHAIN || (CHAIN = {}));\n\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = nacl.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return nacl.decodeBase64(value);\n}\nfunction encode(value, urlSafe = false) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        uint8Array = nacl.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction decode(value, urlSafe = false) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return nacl.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return JSON.parse(nacl.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nconst Base64 = {\n    encode,\n    decode\n};\n\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\n\nfunction isNode() {\n    return (typeof process !== 'undefined' && process.versions != null && process.versions.node != null);\n}\n\nclass SessionCrypto {\n    constructor(keyPair) {\n        this.nonceLength = 24;\n        this.keyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n        this.sessionId = toHexString(this.keyPair.publicKey);\n    }\n    createKeypair() {\n        return nacl$1.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: hexToByteArray(keyPair.publicKey),\n            secretKey: hexToByteArray(keyPair.secretKey)\n        };\n    }\n    createNonce() {\n        return nacl$1.randomBytes(this.nonceLength);\n    }\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = nacl$1.box(encodedMessage, nonce, receiverPublicKey, this.keyPair.secretKey);\n        return concatUint8Arrays(nonce, encrypted);\n    }\n    decrypt(message, senderPublicKey) {\n        const [nonce, internalMessage] = splitToUint8Arrays(message, this.nonceLength);\n        const decrypted = nacl$1.box.open(internalMessage, nonce, senderPublicKey, this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${this.keyPair.publicKey.toString()} \\n keypair secretkey: ${this.keyPair.secretKey.toString()}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: toHexString(this.keyPair.publicKey),\n            secretKey: toHexString(this.keyPair.secretKey)\n        };\n    }\n}\n\nexport { Base64, CHAIN, CONNECT_EVENT_ERROR_CODES, CONNECT_ITEM_ERROR_CODES, DISCONNECT_ERROR_CODES, SEND_TRANSACTION_ERROR_CODES, SIGN_DATA_ERROR_CODES, SessionCrypto, concatUint8Arrays, hexToByteArray, isNode, splitToUint8Arrays, toHexString };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}