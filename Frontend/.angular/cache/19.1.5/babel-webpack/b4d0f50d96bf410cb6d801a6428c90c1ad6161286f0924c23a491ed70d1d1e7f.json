{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/Desktop/Front/buy-time/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n  return a instanceof Uint8Array || ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array';\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(b, ...lengths) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length)) throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nexport function ahash(h) {\n  if (typeof h !== 'function' || typeof h.create !== 'function') throw new Error('Hash should be wrapped by utils.createHasher');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n  for (let i = 0; i < arrays.length; i++) {\n    arrays[i].fill(0);\n  }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n  return word << 32 - shift | word >>> shift;\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n  return word << shift | word >>> 32 - shift >>> 0;\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */(() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nexport function byteSwap(word) {\n  return word << 24 & 0xff000000 | word << 8 & 0xff0000 | word >>> 8 & 0xff00 | word >>> 24 & 0xff;\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE = isLE ? n => n : n => byteSwap(n);\n/** @deprecated */\nexport const byteSwapIfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n  return arr;\n}\nexport const swap32IfBE = isLE ? u => u : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */(() =>\n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */Array.from({\n  length: 256\n}, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = {\n  _0: 48,\n  _9: 57,\n  A: 65,\n  F: 70,\n  a: 97,\n  f: 102\n};\nfunction asciiToBase16(ch) {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* () {});\n  return function nextTick() {\n    return _ref.apply(this, arguments);\n  };\n}();\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport function asyncLoop(_x, _x2, _x3) {\n  return _asyncLoop.apply(this, arguments);\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nfunction _asyncLoop() {\n  _asyncLoop = _asyncToGenerator(function* (iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n      cb(i);\n      // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n      const diff = Date.now() - ts;\n      if (diff >= 0 && diff < tick) continue;\n      yield nextTick();\n      ts += diff;\n    }\n  });\n  return _asyncLoop.apply(this, arguments);\n}\nexport function utf8ToBytes(str) {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n  return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data) {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays) {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\nexport function checkOpts(defaults, opts) {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]') throw new Error('options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged;\n}\n/** For runtime check if class implements interface */\nexport class Hash {}\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher(hashCons) {\n  const hashC = msg => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\nexport function createOptHasher(hashCons) {\n  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({});\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = opts => hashCons(opts);\n  return hashC;\n}\nexport function createXOFer(hashCons) {\n  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({});\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = opts => hashCons(opts);\n  return hashC;\n}\nexport const wrapConstructor = createHasher;\nexport const wrapConstructorWithOpts = createOptHasher;\nexport const wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return Uint8Array.from(crypto.randomBytes(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}","map":{"version":3,"names":["crypto","isBytes","a","Uint8Array","ArrayBuffer","isView","constructor","name","anumber","n","Number","isSafeInteger","Error","abytes","b","lengths","length","includes","ahash","h","create","outputLen","blockLen","aexists","instance","checkFinished","destroyed","finished","aoutput","out","min","u8","arr","buffer","byteOffset","byteLength","u32","Uint32Array","Math","floor","clean","arrays","i","fill","createView","DataView","rotr","word","shift","rotl","isLE","byteSwap","swap8IfBE","byteSwapIfBE","byteSwap32","swap32IfBE","u","hasHexBuiltin","from","toHex","fromHex","hexes","Array","_","toString","padStart","bytesToHex","bytes","hex","asciis","_0","_9","A","F","f","asciiToBase16","ch","hexToBytes","hl","al","array","ai","hi","n1","charCodeAt","n2","undefined","char","nextTick","_ref","_asyncToGenerator","apply","arguments","asyncLoop","_x","_x2","_x3","_asyncLoop","iters","tick","cb","ts","Date","now","diff","utf8ToBytes","str","TextEncoder","encode","bytesToUtf8","TextDecoder","decode","toBytes","data","kdfInputToBytes","concatBytes","sum","res","pad","set","checkOpts","defaults","opts","call","merged","Object","assign","Hash","createHasher","hashCons","hashC","msg","update","digest","tmp","createOptHasher","createXOFer","wrapConstructor","wrapConstructorWithOpts","wrapXOFConstructorWithOpts","randomBytes","bytesLength","getRandomValues"],"sources":["C:/Users/user/Desktop/Front/buy-time/Frontend/node_modules/@noble/hashes/esm/utils.js"],"sourcesContent":["/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nexport function ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** @deprecated */\nexport const byteSwapIfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nexport const swap32IfBE = isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function createOptHasher(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function createXOFer(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport const wrapConstructor = createHasher;\nexport const wrapConstructorWithOpts = createOptHasher;\nexport const wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return Uint8Array.from(crypto.randomBytes(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}