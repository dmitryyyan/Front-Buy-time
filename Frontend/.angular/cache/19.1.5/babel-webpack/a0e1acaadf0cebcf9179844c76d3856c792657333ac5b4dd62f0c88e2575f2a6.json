{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nlet TimeslotService = class TimeslotService {\n  http;\n  apiUrl = 'http://localhost:5258/api/timeslot'; // Змініть на ваш реальний URL\n  constructor(http) {\n    this.http = http;\n  }\n  getAllTimeSlots() {\n    // console.log('Fetching slot data from:', `${this.apiUrl}/get-all`);\n    return this.http.get(`${this.apiUrl}/get-all`);\n  }\n  getTimeSlotsById(id) {\n    console.log(`Fetching time slots for id: ${id}`);\n    return this.http.get(`${this.apiUrl}/get-by-id?id=${id}`);\n  }\n  getTimeSlotsByTeacherId(userId) {\n    console.log(`Fetching time slots for teacher id: ${userId}`);\n    return this.http.get(`${this.apiUrl}/get-by-id?id=${userId}`);\n  }\n  createBook(timeSlotData) {\n    return this.http.post(`${this.apiUrl}/create`, timeSlotData);\n  }\n  static ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nTimeslotService = __decorate([Injectable({\n  providedIn: 'root'\n})], TimeslotService);\nexport { TimeslotService };","map":{"version":3,"names":["Injectable","HttpClient","TimeslotService","http","apiUrl","constructor","getAllTimeSlots","get","getTimeSlotsById","id","console","log","getTimeSlotsByTeacherId","userId","createBook","timeSlotData","post","__decorate","providedIn"],"sources":["C:\\Users\\user\\Desktop\\Front\\buy-time\\Frontend\\src\\app\\services\\timeslot.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TimeslotService {\r\n  private apiUrl = 'http://localhost:5258/api/timeslot'; // Змініть на ваш реальний URL\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllTimeSlots(): Observable<any[]> {\r\n   // console.log('Fetching slot data from:', `${this.apiUrl}/get-all`);\r\n    return this.http.get<any[]>(`${this.apiUrl}/get-all`);\r\n  }\r\n\r\n  getTimeSlotsById(id: string): Observable<any> {\r\n    console.log(`Fetching time slots for id: ${id}`);\r\n    return this.http.get<any>(`${this.apiUrl}/get-by-id?id=${id}`);\r\n  }\r\n\r\n  getTimeSlotsByTeacherId(userId: string): Observable<any[]> {\r\n    console.log(`Fetching time slots for teacher id: ${userId}`);\r\n    return this.http.get<any[]>(`${this.apiUrl}/get-by-id?id=${userId}`);\r\n  }\r\n\r\n\r\n  createBook(timeSlotData: any): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/create`, timeSlotData);\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AAM1C,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAGNC,IAAA;EAFZC,MAAM,GAAG,oCAAoC,CAAC,CAAC;EAEvDC,YAAoBF,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCG,eAAeA,CAAA;IACd;IACC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAQ,GAAG,IAAI,CAACH,MAAM,UAAU,CAAC;EACvD;EAEAI,gBAAgBA,CAACC,EAAU;IACzBC,OAAO,CAACC,GAAG,CAAC,+BAA+BF,EAAE,EAAE,CAAC;IAChD,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACH,MAAM,iBAAiBK,EAAE,EAAE,CAAC;EAChE;EAEAG,uBAAuBA,CAACC,MAAc;IACpCH,OAAO,CAACC,GAAG,CAAC,uCAAuCE,MAAM,EAAE,CAAC;IAC5D,OAAO,IAAI,CAACV,IAAI,CAACI,GAAG,CAAQ,GAAG,IAAI,CAACH,MAAM,iBAAiBS,MAAM,EAAE,CAAC;EACtE;EAGAC,UAAUA,CAACC,YAAiB;IAC1B,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAM,GAAG,IAAI,CAACZ,MAAM,SAAS,EAAEW,YAAY,CAAC;EACnE;;;;;AAvBWb,eAAe,GAAAe,UAAA,EAH3BjB,UAAU,CAAC;EACVkB,UAAU,EAAE;CACb,CAAC,C,EACWhB,eAAe,CAwB3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}